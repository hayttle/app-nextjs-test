import styles from "@/styles/Home.module.css"
import Layout from "@/components/LayoutCardSignIn"
import Input from "@/components/input/input"
import Button from "@/components/button/button"
import Link from "next/link"
import Head from "next/head"
import axios from "axios"
import {useState} from "react"
import {useRouter} from "next/router"
import {setCookie, getCookie, deleteCookie} from "cookies-next"
import {verifyToken} from "@/services/users"

export default function signIn() {
  const router = useRouter()

  const [form, setForm] = useState("")
  const [message, setMessage] = useState("")
  const [type, setType] = useState("")

  const handleSubmit = async (e) => {
    e.preventDefault()

    if (!form.email) {
      alert("Preencha o email!")
      return
    }
    try {
      const response = await axios.get("/api/users/login", {params: form})
      const token = response.data

      if (response.status !== 200) throw new Error(token)

      setCookie("jwt_authorization", token, {maxAge: 60 * 60})
      router.push("/")
    } catch (error) {
      setMessage(error.response.data)
      setType("error")
    }
  }

  const handleChange = (e) => {
    setForm({...form, [e.target.name]: e.target.value})
  }

  const handleMessageClick = () => {
    setMessage("")
  }

  const handleCheckboxChange = (e) => {
    setForm({...form, [e.target.name]: e.target.checked})
  }

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="" />
      </Head>
      <Layout>
        <div className={styles.title}>
          <h2>Bem-vindo(a) de volta!</h2>
        </div>
        <form onSubmit={handleSubmit}>
          <div>
            <Input
              text="Email"
              name="email"
              type="email"
              value={form.email ? form.email : ""}
              placeholder="Informe seu email"
              onChange={handleChange}
              required
            />
            <Input
              text="Senha"
              name="password"
              type="password"
              value={form.password ? form.password : ""}
              placeholder="Informe sua senha"
              onChange={handleChange}
              required
            />
          </div>
          {message && (
            <div onClick={handleMessageClick} className={`${styles.message} ${styles[type]}`}>
              {message}
            </div>
          )}
          <div className={styles.footer}>
            <div className={styles.remember}>
              <input type="checkbox" name="remember" id="remember" onChange={handleCheckboxChange} />
              <span>Lembrar-me</span>
            </div>
            <div>
              <Link className={styles.link} href="/signup">
                Não tem conta? Cadastrar!
              </Link>
            </div>
          </div>
          <Button text="Entrar" type="submit" />
        </form>
      </Layout>
    </>
  )
}

export const getServerSideProps = async ({req, res}) => {
  try {
    const token = getCookie("jwt_authorization", {req, res})
    if (!token) {
      throw new Error("Token inválido!")
    }
    verifyToken(token)
    return {
      redirect: {
        permanent: false,
        destination: "/"
      },
      props: {}
    }
  } catch (error) {
    deleteCookie("jwt_authorization", {req, res})
    return {
      props: {}
    }
  }
}
